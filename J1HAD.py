#ENCODED BY : MAHADI HASAN JIHAD
#ENCRYPTION : Py3 BASE64
#GITHUB : https://github.com/Mh-Jihad404
#----------------------------------------------
import base64
exec(base64.b64decode(b''))